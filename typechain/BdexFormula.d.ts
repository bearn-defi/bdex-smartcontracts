/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface BdexFormulaInterface extends ethers.utils.Interface {
  functions: {
    "ensureConstantValue(uint256,uint256,uint256,uint256,uint32)": FunctionFragment;
    "getAmountIn(uint256,uint256,uint256,uint32,uint32,uint32)": FunctionFragment;
    "getAmountOut(uint256,uint256,uint256,uint32,uint32,uint32)": FunctionFragment;
    "getAmountsIn(address,address,uint256,address[])": FunctionFragment;
    "getAmountsOut(address,address,uint256,address[])": FunctionFragment;
    "getFactoryAmountsIn(address,address,address,uint256,address[])": FunctionFragment;
    "getFactoryAmountsOut(address,address,address,uint256,address[])": FunctionFragment;
    "getFactoryReserveAndWeights(address,address,address)": FunctionFragment;
    "getFactoryWeightsAndSwapFee(address,address)": FunctionFragment;
    "getOtherToken(address,address)": FunctionFragment;
    "getPairAmountIn(address,address,uint256)": FunctionFragment;
    "getPairAmountOut(address,address,uint256)": FunctionFragment;
    "getReserveAndWeights(address,address)": FunctionFragment;
    "getReserves(address,address,address)": FunctionFragment;
    "getWeightsAndSwapFee(address)": FunctionFragment;
    "mintLiquidityFee(uint256,uint112,uint112,uint32,uint32,uint112,uint112)": FunctionFragment;
    "quote(uint256,uint256,uint256)": FunctionFragment;
    "sortTokens(address,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "ensureConstantValue",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getAmountIn",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getAmountOut",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getAmountsIn",
    values: [string, string, BigNumberish, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getAmountsOut",
    values: [string, string, BigNumberish, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getFactoryAmountsIn",
    values: [string, string, string, BigNumberish, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getFactoryAmountsOut",
    values: [string, string, string, BigNumberish, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getFactoryReserveAndWeights",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getFactoryWeightsAndSwapFee",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getOtherToken",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getPairAmountIn",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPairAmountOut",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveAndWeights",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserves",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getWeightsAndSwapFee",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "mintLiquidityFee",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "quote",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "sortTokens",
    values: [string, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "ensureConstantValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAmountIn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAmountOut",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAmountsIn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAmountsOut",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFactoryAmountsIn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFactoryAmountsOut",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFactoryReserveAndWeights",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFactoryWeightsAndSwapFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOtherToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPairAmountIn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPairAmountOut",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveAndWeights",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserves",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getWeightsAndSwapFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintLiquidityFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "quote", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "sortTokens", data: BytesLike): Result;

  events: {};
}

export class BdexFormula extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: BdexFormulaInterface;

  functions: {
    ensureConstantValue(
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      balance0Adjusted: BigNumberish,
      balance1Adjusted: BigNumberish,
      tokenWeight0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "ensureConstantValue(uint256,uint256,uint256,uint256,uint32)"(
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      balance0Adjusted: BigNumberish,
      balance1Adjusted: BigNumberish,
      tokenWeight0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    getAmountIn(
      amountOut: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      amountIn: BigNumber;
      0: BigNumber;
    }>;

    "getAmountIn(uint256,uint256,uint256,uint32,uint32,uint32)"(
      amountOut: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      amountIn: BigNumber;
      0: BigNumber;
    }>;

    getAmountOut(
      amountIn: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      amountOut: BigNumber;
      0: BigNumber;
    }>;

    "getAmountOut(uint256,uint256,uint256,uint32,uint32,uint32)"(
      amountIn: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      amountOut: BigNumber;
      0: BigNumber;
    }>;

    getAmountsIn(
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<{
      amounts: BigNumber[];
      0: BigNumber[];
    }>;

    "getAmountsIn(address,address,uint256,address[])"(
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<{
      amounts: BigNumber[];
      0: BigNumber[];
    }>;

    getAmountsOut(
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<{
      amounts: BigNumber[];
      0: BigNumber[];
    }>;

    "getAmountsOut(address,address,uint256,address[])"(
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<{
      amounts: BigNumber[];
      0: BigNumber[];
    }>;

    getFactoryAmountsIn(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<{
      amounts: BigNumber[];
      0: BigNumber[];
    }>;

    "getFactoryAmountsIn(address,address,address,uint256,address[])"(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<{
      amounts: BigNumber[];
      0: BigNumber[];
    }>;

    getFactoryAmountsOut(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<{
      amounts: BigNumber[];
      0: BigNumber[];
    }>;

    "getFactoryAmountsOut(address,address,address,uint256,address[])"(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<{
      amounts: BigNumber[];
      0: BigNumber[];
    }>;

    getFactoryReserveAndWeights(
      factory: string,
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenB: string;
      reserveA: BigNumber;
      reserveB: BigNumber;
      tokenWeightA: number;
      tokenWeightB: number;
      swapFee: number;
      0: string;
      1: BigNumber;
      2: BigNumber;
      3: number;
      4: number;
      5: number;
    }>;

    "getFactoryReserveAndWeights(address,address,address)"(
      factory: string,
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenB: string;
      reserveA: BigNumber;
      reserveB: BigNumber;
      tokenWeightA: number;
      tokenWeightB: number;
      swapFee: number;
      0: string;
      1: BigNumber;
      2: BigNumber;
      3: number;
      4: number;
      5: number;
    }>;

    getFactoryWeightsAndSwapFee(
      factory: string,
      pair: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenWeight0: number;
      tokenWeight1: number;
      swapFee: number;
      0: number;
      1: number;
      2: number;
    }>;

    "getFactoryWeightsAndSwapFee(address,address)"(
      factory: string,
      pair: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenWeight0: number;
      tokenWeight1: number;
      swapFee: number;
      0: number;
      1: number;
      2: number;
    }>;

    getOtherToken(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenB: string;
      0: string;
    }>;

    "getOtherToken(address,address)"(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenB: string;
      0: string;
    }>;

    getPairAmountIn(
      pair: string,
      tokenIn: string,
      amountOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      amountIn: BigNumber;
      0: BigNumber;
    }>;

    "getPairAmountIn(address,address,uint256)"(
      pair: string,
      tokenIn: string,
      amountOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      amountIn: BigNumber;
      0: BigNumber;
    }>;

    getPairAmountOut(
      pair: string,
      tokenIn: string,
      amountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      amountOut: BigNumber;
      0: BigNumber;
    }>;

    "getPairAmountOut(address,address,uint256)"(
      pair: string,
      tokenIn: string,
      amountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      amountOut: BigNumber;
      0: BigNumber;
    }>;

    getReserveAndWeights(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenB: string;
      reserveA: BigNumber;
      reserveB: BigNumber;
      tokenWeightA: number;
      tokenWeightB: number;
      swapFee: number;
      0: string;
      1: BigNumber;
      2: BigNumber;
      3: number;
      4: number;
      5: number;
    }>;

    "getReserveAndWeights(address,address)"(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenB: string;
      reserveA: BigNumber;
      reserveB: BigNumber;
      tokenWeightA: number;
      tokenWeightB: number;
      swapFee: number;
      0: string;
      1: BigNumber;
      2: BigNumber;
      3: number;
      4: number;
      5: number;
    }>;

    getReserves(
      pair: string,
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<{
      reserveA: BigNumber;
      reserveB: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    "getReserves(address,address,address)"(
      pair: string,
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<{
      reserveA: BigNumber;
      reserveB: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    getWeightsAndSwapFee(
      pair: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenWeight0: number;
      tokenWeight1: number;
      swapFee: number;
      0: number;
      1: number;
      2: number;
    }>;

    "getWeightsAndSwapFee(address)"(
      pair: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenWeight0: number;
      tokenWeight1: number;
      swapFee: number;
      0: number;
      1: number;
      2: number;
    }>;

    mintLiquidityFee(
      totalLiquidity: BigNumberish,
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      tokenWeight0: BigNumberish,
      tokenWeight1: BigNumberish,
      collectedFee0: BigNumberish,
      collectedFee1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      amount: BigNumber;
      0: BigNumber;
    }>;

    "mintLiquidityFee(uint256,uint112,uint112,uint32,uint32,uint112,uint112)"(
      totalLiquidity: BigNumberish,
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      tokenWeight0: BigNumberish,
      tokenWeight1: BigNumberish,
      collectedFee0: BigNumberish,
      collectedFee1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      amount: BigNumber;
      0: BigNumber;
    }>;

    quote(
      amountA: BigNumberish,
      reserveA: BigNumberish,
      reserveB: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      amountB: BigNumber;
      0: BigNumber;
    }>;

    "quote(uint256,uint256,uint256)"(
      amountA: BigNumberish,
      reserveA: BigNumberish,
      reserveB: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      amountB: BigNumber;
      0: BigNumber;
    }>;

    sortTokens(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<{
      token0: string;
      token1: string;
      0: string;
      1: string;
    }>;

    "sortTokens(address,address)"(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<{
      token0: string;
      token1: string;
      0: string;
      1: string;
    }>;
  };

  ensureConstantValue(
    reserve0: BigNumberish,
    reserve1: BigNumberish,
    balance0Adjusted: BigNumberish,
    balance1Adjusted: BigNumberish,
    tokenWeight0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "ensureConstantValue(uint256,uint256,uint256,uint256,uint32)"(
    reserve0: BigNumberish,
    reserve1: BigNumberish,
    balance0Adjusted: BigNumberish,
    balance1Adjusted: BigNumberish,
    tokenWeight0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getAmountIn(
    amountOut: BigNumberish,
    reserveIn: BigNumberish,
    reserveOut: BigNumberish,
    tokenWeightIn: BigNumberish,
    tokenWeightOut: BigNumberish,
    swapFee: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAmountIn(uint256,uint256,uint256,uint32,uint32,uint32)"(
    amountOut: BigNumberish,
    reserveIn: BigNumberish,
    reserveOut: BigNumberish,
    tokenWeightIn: BigNumberish,
    tokenWeightOut: BigNumberish,
    swapFee: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAmountOut(
    amountIn: BigNumberish,
    reserveIn: BigNumberish,
    reserveOut: BigNumberish,
    tokenWeightIn: BigNumberish,
    tokenWeightOut: BigNumberish,
    swapFee: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAmountOut(uint256,uint256,uint256,uint32,uint32,uint32)"(
    amountIn: BigNumberish,
    reserveIn: BigNumberish,
    reserveOut: BigNumberish,
    tokenWeightIn: BigNumberish,
    tokenWeightOut: BigNumberish,
    swapFee: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAmountsIn(
    tokenIn: string,
    tokenOut: string,
    amountOut: BigNumberish,
    path: string[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getAmountsIn(address,address,uint256,address[])"(
    tokenIn: string,
    tokenOut: string,
    amountOut: BigNumberish,
    path: string[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getAmountsOut(
    tokenIn: string,
    tokenOut: string,
    amountIn: BigNumberish,
    path: string[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getAmountsOut(address,address,uint256,address[])"(
    tokenIn: string,
    tokenOut: string,
    amountIn: BigNumberish,
    path: string[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getFactoryAmountsIn(
    factory: string,
    tokenIn: string,
    tokenOut: string,
    amountOut: BigNumberish,
    path: string[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getFactoryAmountsIn(address,address,address,uint256,address[])"(
    factory: string,
    tokenIn: string,
    tokenOut: string,
    amountOut: BigNumberish,
    path: string[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getFactoryAmountsOut(
    factory: string,
    tokenIn: string,
    tokenOut: string,
    amountIn: BigNumberish,
    path: string[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getFactoryAmountsOut(address,address,address,uint256,address[])"(
    factory: string,
    tokenIn: string,
    tokenOut: string,
    amountIn: BigNumberish,
    path: string[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getFactoryReserveAndWeights(
    factory: string,
    pair: string,
    tokenA: string,
    overrides?: CallOverrides
  ): Promise<{
    tokenB: string;
    reserveA: BigNumber;
    reserveB: BigNumber;
    tokenWeightA: number;
    tokenWeightB: number;
    swapFee: number;
    0: string;
    1: BigNumber;
    2: BigNumber;
    3: number;
    4: number;
    5: number;
  }>;

  "getFactoryReserveAndWeights(address,address,address)"(
    factory: string,
    pair: string,
    tokenA: string,
    overrides?: CallOverrides
  ): Promise<{
    tokenB: string;
    reserveA: BigNumber;
    reserveB: BigNumber;
    tokenWeightA: number;
    tokenWeightB: number;
    swapFee: number;
    0: string;
    1: BigNumber;
    2: BigNumber;
    3: number;
    4: number;
    5: number;
  }>;

  getFactoryWeightsAndSwapFee(
    factory: string,
    pair: string,
    overrides?: CallOverrides
  ): Promise<{
    tokenWeight0: number;
    tokenWeight1: number;
    swapFee: number;
    0: number;
    1: number;
    2: number;
  }>;

  "getFactoryWeightsAndSwapFee(address,address)"(
    factory: string,
    pair: string,
    overrides?: CallOverrides
  ): Promise<{
    tokenWeight0: number;
    tokenWeight1: number;
    swapFee: number;
    0: number;
    1: number;
    2: number;
  }>;

  getOtherToken(
    pair: string,
    tokenA: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "getOtherToken(address,address)"(
    pair: string,
    tokenA: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getPairAmountIn(
    pair: string,
    tokenIn: string,
    amountOut: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getPairAmountIn(address,address,uint256)"(
    pair: string,
    tokenIn: string,
    amountOut: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPairAmountOut(
    pair: string,
    tokenIn: string,
    amountIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getPairAmountOut(address,address,uint256)"(
    pair: string,
    tokenIn: string,
    amountIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveAndWeights(
    pair: string,
    tokenA: string,
    overrides?: CallOverrides
  ): Promise<{
    tokenB: string;
    reserveA: BigNumber;
    reserveB: BigNumber;
    tokenWeightA: number;
    tokenWeightB: number;
    swapFee: number;
    0: string;
    1: BigNumber;
    2: BigNumber;
    3: number;
    4: number;
    5: number;
  }>;

  "getReserveAndWeights(address,address)"(
    pair: string,
    tokenA: string,
    overrides?: CallOverrides
  ): Promise<{
    tokenB: string;
    reserveA: BigNumber;
    reserveB: BigNumber;
    tokenWeightA: number;
    tokenWeightB: number;
    swapFee: number;
    0: string;
    1: BigNumber;
    2: BigNumber;
    3: number;
    4: number;
    5: number;
  }>;

  getReserves(
    pair: string,
    tokenA: string,
    tokenB: string,
    overrides?: CallOverrides
  ): Promise<{
    reserveA: BigNumber;
    reserveB: BigNumber;
    0: BigNumber;
    1: BigNumber;
  }>;

  "getReserves(address,address,address)"(
    pair: string,
    tokenA: string,
    tokenB: string,
    overrides?: CallOverrides
  ): Promise<{
    reserveA: BigNumber;
    reserveB: BigNumber;
    0: BigNumber;
    1: BigNumber;
  }>;

  getWeightsAndSwapFee(
    pair: string,
    overrides?: CallOverrides
  ): Promise<{
    tokenWeight0: number;
    tokenWeight1: number;
    swapFee: number;
    0: number;
    1: number;
    2: number;
  }>;

  "getWeightsAndSwapFee(address)"(
    pair: string,
    overrides?: CallOverrides
  ): Promise<{
    tokenWeight0: number;
    tokenWeight1: number;
    swapFee: number;
    0: number;
    1: number;
    2: number;
  }>;

  mintLiquidityFee(
    totalLiquidity: BigNumberish,
    reserve0: BigNumberish,
    reserve1: BigNumberish,
    tokenWeight0: BigNumberish,
    tokenWeight1: BigNumberish,
    collectedFee0: BigNumberish,
    collectedFee1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "mintLiquidityFee(uint256,uint112,uint112,uint32,uint32,uint112,uint112)"(
    totalLiquidity: BigNumberish,
    reserve0: BigNumberish,
    reserve1: BigNumberish,
    tokenWeight0: BigNumberish,
    tokenWeight1: BigNumberish,
    collectedFee0: BigNumberish,
    collectedFee1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  quote(
    amountA: BigNumberish,
    reserveA: BigNumberish,
    reserveB: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "quote(uint256,uint256,uint256)"(
    amountA: BigNumberish,
    reserveA: BigNumberish,
    reserveB: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  sortTokens(
    tokenA: string,
    tokenB: string,
    overrides?: CallOverrides
  ): Promise<{
    token0: string;
    token1: string;
    0: string;
    1: string;
  }>;

  "sortTokens(address,address)"(
    tokenA: string,
    tokenB: string,
    overrides?: CallOverrides
  ): Promise<{
    token0: string;
    token1: string;
    0: string;
    1: string;
  }>;

  callStatic: {
    ensureConstantValue(
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      balance0Adjusted: BigNumberish,
      balance1Adjusted: BigNumberish,
      tokenWeight0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "ensureConstantValue(uint256,uint256,uint256,uint256,uint32)"(
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      balance0Adjusted: BigNumberish,
      balance1Adjusted: BigNumberish,
      tokenWeight0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getAmountIn(
      amountOut: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAmountIn(uint256,uint256,uint256,uint32,uint32,uint32)"(
      amountOut: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAmountOut(
      amountIn: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAmountOut(uint256,uint256,uint256,uint32,uint32,uint32)"(
      amountIn: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAmountsIn(
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getAmountsIn(address,address,uint256,address[])"(
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getAmountsOut(
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getAmountsOut(address,address,uint256,address[])"(
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getFactoryAmountsIn(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getFactoryAmountsIn(address,address,address,uint256,address[])"(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getFactoryAmountsOut(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getFactoryAmountsOut(address,address,address,uint256,address[])"(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getFactoryReserveAndWeights(
      factory: string,
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenB: string;
      reserveA: BigNumber;
      reserveB: BigNumber;
      tokenWeightA: number;
      tokenWeightB: number;
      swapFee: number;
      0: string;
      1: BigNumber;
      2: BigNumber;
      3: number;
      4: number;
      5: number;
    }>;

    "getFactoryReserveAndWeights(address,address,address)"(
      factory: string,
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenB: string;
      reserveA: BigNumber;
      reserveB: BigNumber;
      tokenWeightA: number;
      tokenWeightB: number;
      swapFee: number;
      0: string;
      1: BigNumber;
      2: BigNumber;
      3: number;
      4: number;
      5: number;
    }>;

    getFactoryWeightsAndSwapFee(
      factory: string,
      pair: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenWeight0: number;
      tokenWeight1: number;
      swapFee: number;
      0: number;
      1: number;
      2: number;
    }>;

    "getFactoryWeightsAndSwapFee(address,address)"(
      factory: string,
      pair: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenWeight0: number;
      tokenWeight1: number;
      swapFee: number;
      0: number;
      1: number;
      2: number;
    }>;

    getOtherToken(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "getOtherToken(address,address)"(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getPairAmountIn(
      pair: string,
      tokenIn: string,
      amountOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPairAmountIn(address,address,uint256)"(
      pair: string,
      tokenIn: string,
      amountOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPairAmountOut(
      pair: string,
      tokenIn: string,
      amountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPairAmountOut(address,address,uint256)"(
      pair: string,
      tokenIn: string,
      amountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveAndWeights(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenB: string;
      reserveA: BigNumber;
      reserveB: BigNumber;
      tokenWeightA: number;
      tokenWeightB: number;
      swapFee: number;
      0: string;
      1: BigNumber;
      2: BigNumber;
      3: number;
      4: number;
      5: number;
    }>;

    "getReserveAndWeights(address,address)"(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenB: string;
      reserveA: BigNumber;
      reserveB: BigNumber;
      tokenWeightA: number;
      tokenWeightB: number;
      swapFee: number;
      0: string;
      1: BigNumber;
      2: BigNumber;
      3: number;
      4: number;
      5: number;
    }>;

    getReserves(
      pair: string,
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<{
      reserveA: BigNumber;
      reserveB: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    "getReserves(address,address,address)"(
      pair: string,
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<{
      reserveA: BigNumber;
      reserveB: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    getWeightsAndSwapFee(
      pair: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenWeight0: number;
      tokenWeight1: number;
      swapFee: number;
      0: number;
      1: number;
      2: number;
    }>;

    "getWeightsAndSwapFee(address)"(
      pair: string,
      overrides?: CallOverrides
    ): Promise<{
      tokenWeight0: number;
      tokenWeight1: number;
      swapFee: number;
      0: number;
      1: number;
      2: number;
    }>;

    mintLiquidityFee(
      totalLiquidity: BigNumberish,
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      tokenWeight0: BigNumberish,
      tokenWeight1: BigNumberish,
      collectedFee0: BigNumberish,
      collectedFee1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "mintLiquidityFee(uint256,uint112,uint112,uint32,uint32,uint112,uint112)"(
      totalLiquidity: BigNumberish,
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      tokenWeight0: BigNumberish,
      tokenWeight1: BigNumberish,
      collectedFee0: BigNumberish,
      collectedFee1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    quote(
      amountA: BigNumberish,
      reserveA: BigNumberish,
      reserveB: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "quote(uint256,uint256,uint256)"(
      amountA: BigNumberish,
      reserveA: BigNumberish,
      reserveB: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    sortTokens(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<{
      token0: string;
      token1: string;
      0: string;
      1: string;
    }>;

    "sortTokens(address,address)"(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<{
      token0: string;
      token1: string;
      0: string;
      1: string;
    }>;
  };

  filters: {};

  estimateGas: {
    ensureConstantValue(
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      balance0Adjusted: BigNumberish,
      balance1Adjusted: BigNumberish,
      tokenWeight0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ensureConstantValue(uint256,uint256,uint256,uint256,uint32)"(
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      balance0Adjusted: BigNumberish,
      balance1Adjusted: BigNumberish,
      tokenWeight0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAmountIn(
      amountOut: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAmountIn(uint256,uint256,uint256,uint32,uint32,uint32)"(
      amountOut: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAmountOut(
      amountIn: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAmountOut(uint256,uint256,uint256,uint32,uint32,uint32)"(
      amountIn: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAmountsIn(
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAmountsIn(address,address,uint256,address[])"(
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAmountsOut(
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAmountsOut(address,address,uint256,address[])"(
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFactoryAmountsIn(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFactoryAmountsIn(address,address,address,uint256,address[])"(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFactoryAmountsOut(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFactoryAmountsOut(address,address,address,uint256,address[])"(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFactoryReserveAndWeights(
      factory: string,
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFactoryReserveAndWeights(address,address,address)"(
      factory: string,
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFactoryWeightsAndSwapFee(
      factory: string,
      pair: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getFactoryWeightsAndSwapFee(address,address)"(
      factory: string,
      pair: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOtherToken(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getOtherToken(address,address)"(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPairAmountIn(
      pair: string,
      tokenIn: string,
      amountOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPairAmountIn(address,address,uint256)"(
      pair: string,
      tokenIn: string,
      amountOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPairAmountOut(
      pair: string,
      tokenIn: string,
      amountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPairAmountOut(address,address,uint256)"(
      pair: string,
      tokenIn: string,
      amountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveAndWeights(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveAndWeights(address,address)"(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserves(
      pair: string,
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserves(address,address,address)"(
      pair: string,
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getWeightsAndSwapFee(
      pair: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getWeightsAndSwapFee(address)"(
      pair: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mintLiquidityFee(
      totalLiquidity: BigNumberish,
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      tokenWeight0: BigNumberish,
      tokenWeight1: BigNumberish,
      collectedFee0: BigNumberish,
      collectedFee1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "mintLiquidityFee(uint256,uint112,uint112,uint32,uint32,uint112,uint112)"(
      totalLiquidity: BigNumberish,
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      tokenWeight0: BigNumberish,
      tokenWeight1: BigNumberish,
      collectedFee0: BigNumberish,
      collectedFee1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    quote(
      amountA: BigNumberish,
      reserveA: BigNumberish,
      reserveB: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "quote(uint256,uint256,uint256)"(
      amountA: BigNumberish,
      reserveA: BigNumberish,
      reserveB: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    sortTokens(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "sortTokens(address,address)"(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    ensureConstantValue(
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      balance0Adjusted: BigNumberish,
      balance1Adjusted: BigNumberish,
      tokenWeight0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ensureConstantValue(uint256,uint256,uint256,uint256,uint32)"(
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      balance0Adjusted: BigNumberish,
      balance1Adjusted: BigNumberish,
      tokenWeight0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAmountIn(
      amountOut: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAmountIn(uint256,uint256,uint256,uint32,uint32,uint32)"(
      amountOut: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAmountOut(
      amountIn: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAmountOut(uint256,uint256,uint256,uint32,uint32,uint32)"(
      amountIn: BigNumberish,
      reserveIn: BigNumberish,
      reserveOut: BigNumberish,
      tokenWeightIn: BigNumberish,
      tokenWeightOut: BigNumberish,
      swapFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAmountsIn(
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAmountsIn(address,address,uint256,address[])"(
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAmountsOut(
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAmountsOut(address,address,uint256,address[])"(
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFactoryAmountsIn(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFactoryAmountsIn(address,address,address,uint256,address[])"(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountOut: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFactoryAmountsOut(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFactoryAmountsOut(address,address,address,uint256,address[])"(
      factory: string,
      tokenIn: string,
      tokenOut: string,
      amountIn: BigNumberish,
      path: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFactoryReserveAndWeights(
      factory: string,
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFactoryReserveAndWeights(address,address,address)"(
      factory: string,
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFactoryWeightsAndSwapFee(
      factory: string,
      pair: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getFactoryWeightsAndSwapFee(address,address)"(
      factory: string,
      pair: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOtherToken(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOtherToken(address,address)"(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPairAmountIn(
      pair: string,
      tokenIn: string,
      amountOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPairAmountIn(address,address,uint256)"(
      pair: string,
      tokenIn: string,
      amountOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPairAmountOut(
      pair: string,
      tokenIn: string,
      amountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPairAmountOut(address,address,uint256)"(
      pair: string,
      tokenIn: string,
      amountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveAndWeights(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveAndWeights(address,address)"(
      pair: string,
      tokenA: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserves(
      pair: string,
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserves(address,address,address)"(
      pair: string,
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getWeightsAndSwapFee(
      pair: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getWeightsAndSwapFee(address)"(
      pair: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mintLiquidityFee(
      totalLiquidity: BigNumberish,
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      tokenWeight0: BigNumberish,
      tokenWeight1: BigNumberish,
      collectedFee0: BigNumberish,
      collectedFee1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "mintLiquidityFee(uint256,uint112,uint112,uint32,uint32,uint112,uint112)"(
      totalLiquidity: BigNumberish,
      reserve0: BigNumberish,
      reserve1: BigNumberish,
      tokenWeight0: BigNumberish,
      tokenWeight1: BigNumberish,
      collectedFee0: BigNumberish,
      collectedFee1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    quote(
      amountA: BigNumberish,
      reserveA: BigNumberish,
      reserveB: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "quote(uint256,uint256,uint256)"(
      amountA: BigNumberish,
      reserveA: BigNumberish,
      reserveB: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    sortTokens(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "sortTokens(address,address)"(
      tokenA: string,
      tokenB: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
